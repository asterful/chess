pub enum Position {
    A1, B1, C1, D1, E1, F1, G1, H1,
    A2, B2, C2, D2, E2, F2, G2, H2,
    A3, B3, C3, D3, E3, F3, G3, H3,
    A4, B4, C4, D4, E4, F4, G4, H4,
    A5, B5, C5, D5, E5, F5, G5, H5,
    A6, B6, C6, D6, E6, F6, G6, H6,
    A7, B7, C7, D7, E7, F7, G7, H7,
    A8, B8, C8, D8, E8, F8, G8, H8,
}

impl Position {

    // Return index in little endian rank-file
    pub fn index(&self) -> u8 {
        match *self {
            Position::A1 => 0,
            Position::B1 => 1,
            Position::C1 => 2,
            Position::D1 => 3,
            Position::E1 => 4,
            Position::F1 => 5,
            Position::G1 => 6,
            Position::H1 => 7,
            Position::A2 => 8,
            Position::B2 => 9,
            Position::C2 => 10,
            Position::D2 => 11,
            Position::E2 => 12,
            Position::F2 => 13,
            Position::G2 => 14,
            Position::H2 => 15,
            Position::A3 => 16,
            Position::B3 => 17,
            Position::C3 => 18,
            Position::D3 => 19,
            Position::E3 => 20,
            Position::F3 => 21,
            Position::G3 => 22,
            Position::H3 => 23,
            Position::A4 => 24,
            Position::B4 => 25,
            Position::C4 => 26,
            Position::D4 => 27,
            Position::E4 => 28,
            Position::F4 => 29,
            Position::G4 => 30,
            Position::H4 => 31,
            Position::A5 => 32,
            Position::B5 => 33,
            Position::C5 => 34,
            Position::D5 => 35,
            Position::E5 => 36,
            Position::F5 => 37,
            Position::G5 => 38,
            Position::H5 => 39,
            Position::A6 => 40,
            Position::B6 => 41,
            Position::C6 => 42,
            Position::D6 => 43,
            Position::E6 => 44,
            Position::F6 => 45,
            Position::G6 => 46,
            Position::H6 => 47,
            Position::A7 => 48,
            Position::B7 => 49,
            Position::C7 => 50,
            Position::D7 => 51,
            Position::E7 => 52,
            Position::F7 => 53,
            Position::G7 => 54,
            Position::H7 => 55,
            Position::A8 => 56,
            Position::B8 => 57,
            Position::C8 => 58,
            Position::D8 => 59,
            Position::E8 => 60,
            Position::F8 => 61,
            Position::G8 => 62,
            Position::H8 => 63,
        }
    }

    // Get position from index in little endian rank-file
    pub fn from_index(index: u8) -> Option<Self> {
        match index {
            0  => Some(Position::A1),
            1  => Some(Position::B1),
            2  => Some(Position::C1),
            3  => Some(Position::D1),
            4  => Some(Position::E1),
            5  => Some(Position::F1),
            6  => Some(Position::G1),
            7  => Some(Position::H1),
            8  => Some(Position::A2),
            9  => Some(Position::B2),
            10 => Some(Position::C2),
            11 => Some(Position::D2),
            12 => Some(Position::E2),
            13 => Some(Position::F2),
            14 => Some(Position::G2),
            15 => Some(Position::H2),
            16 => Some(Position::A3),
            17 => Some(Position::B3),
            18 => Some(Position::C3),
            19 => Some(Position::D3),
            20 => Some(Position::E3),
            21 => Some(Position::F3),
            22 => Some(Position::G3),
            23 => Some(Position::H3),
            24 => Some(Position::A4),
            25 => Some(Position::B4),
            26 => Some(Position::C4),
            27 => Some(Position::D4),
            28 => Some(Position::E4),
            29 => Some(Position::F4),
            30 => Some(Position::G4),
            31 => Some(Position::H4),
            32 => Some(Position::A5),
            33 => Some(Position::B5),
            34 => Some(Position::C5),
            35 => Some(Position::D5),
            36 => Some(Position::E5),
            37 => Some(Position::F5),
            38 => Some(Position::G5),
            39 => Some(Position::H5),
            40 => Some(Position::A6),
            41 => Some(Position::B6),
            42 => Some(Position::C6),
            43 => Some(Position::D6),
            44 => Some(Position::E6),
            45 => Some(Position::F6),
            46 => Some(Position::G6),
            47 => Some(Position::H6),
            48 => Some(Position::A7),
            49 => Some(Position::B7),
            50 => Some(Position::C7),
            51 => Some(Position::D7),
            52 => Some(Position::E7),
            53 => Some(Position::F7),
            54 => Some(Position::G7),
            55 => Some(Position::H7),
            56 => Some(Position::A8),
            57 => Some(Position::B8),
            58 => Some(Position::C8),
            59 => Some(Position::D8),
            60 => Some(Position::E8),
            61 => Some(Position::F8),
            62 => Some(Position::G8),
            63 => Some(Position::H8),
            _ => None
        }
    }

    pub fn row(&self) -> u8 {
        self.index() / 8
    }

    pub fn col(&self) -> u8 {
        self.index() % 8
    }
}